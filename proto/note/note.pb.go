// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.1
// source: proto/note/note.proto

package note

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_proto_note_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Note) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Note) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNoteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Note          *Note                  `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	mi := &file_proto_note_note_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateNoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type GetNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{3}
}

func (x *GetNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteResponse) Reset() {
	*x = GetNoteResponse{}
	mi := &file_proto_note_note_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteResponse) ProtoMessage() {}

func (x *GetNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteResponse.ProtoReflect.Descriptor instead.
func (*GetNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{4}
}

func (x *GetNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type GetNotesByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotesByUserRequest) Reset() {
	*x = GetNotesByUserRequest{}
	mi := &file_proto_note_note_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotesByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotesByUserRequest) ProtoMessage() {}

func (x *GetNotesByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotesByUserRequest.ProtoReflect.Descriptor instead.
func (*GetNotesByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{5}
}

func (x *GetNotesByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetNotesByUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          []*Note                `protobuf:"bytes,1,rep,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotesByUserResponse) Reset() {
	*x = GetNotesByUserResponse{}
	mi := &file_proto_note_note_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotesByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotesByUserResponse) ProtoMessage() {}

func (x *GetNotesByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotesByUserResponse.ProtoReflect.Descriptor instead.
func (*GetNotesByUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{6}
}

func (x *GetNotesByUserResponse) GetNote() []*Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type UpdateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNoteRequest) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type UpdateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Note          *Note                  `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteResponse) Reset() {
	*x = UpdateNoteResponse{}
	mi := &file_proto_note_note_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteResponse) ProtoMessage() {}

func (x *UpdateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateNoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteResponse) Reset() {
	*x = DeleteNoteResponse{}
	mi := &file_proto_note_note_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteResponse) ProtoMessage() {}

func (x *DeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteNoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_note_note_proto protoreflect.FileDescriptor

const file_proto_note_note_proto_rawDesc = "" +
	"\n" +
	"\x15proto/note/note.proto\x12\x04note\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd5\x01\n" +
	"\x04Note\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\\\n" +
	"\x11CreateNoteRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"h\n" +
	"\x12CreateNoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1e\n" +
	"\x04note\x18\x03 \x01(\v2\n" +
	".note.NoteR\x04note\" \n" +
	"\x0eGetNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"1\n" +
	"\x0fGetNoteResponse\x12\x1e\n" +
	"\x04note\x18\x01 \x01(\v2\n" +
	".note.NoteR\x04note\"0\n" +
	"\x15GetNotesByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"8\n" +
	"\x16GetNotesByUserResponse\x12\x1e\n" +
	"\x04note\x18\x01 \x03(\v2\n" +
	".note.NoteR\x04note\"3\n" +
	"\x11UpdateNoteRequest\x12\x1e\n" +
	"\x04note\x18\x01 \x01(\v2\n" +
	".note.NoteR\x04note\"h\n" +
	"\x12UpdateNoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1e\n" +
	"\x04note\x18\x03 \x01(\v2\n" +
	".note.NoteR\x04note\"#\n" +
	"\x11DeleteNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"H\n" +
	"\x12DeleteNoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xd5\x02\n" +
	"\vNoteService\x12?\n" +
	"\n" +
	"CreateNote\x12\x17.note.CreateNoteRequest\x1a\x18.note.CreateNoteResponse\x126\n" +
	"\aGetNote\x12\x14.note.GetNoteRequest\x1a\x15.note.GetNoteResponse\x12K\n" +
	"\x0eGetNotesByUser\x12\x1b.note.GetNotesByUserRequest\x1a\x1c.note.GetNotesByUserResponse\x12?\n" +
	"\n" +
	"UpdateNote\x12\x17.note.UpdateNoteRequest\x1a\x18.note.UpdateNoteResponse\x12?\n" +
	"\n" +
	"DeleteNote\x12\x17.note.DeleteNoteRequest\x1a\x18.note.DeleteNoteResponseB0Z.github.com/kitoyanok66/inote-protos/proto/noteb\x06proto3"

var (
	file_proto_note_note_proto_rawDescOnce sync.Once
	file_proto_note_note_proto_rawDescData []byte
)

func file_proto_note_note_proto_rawDescGZIP() []byte {
	file_proto_note_note_proto_rawDescOnce.Do(func() {
		file_proto_note_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_note_note_proto_rawDesc), len(file_proto_note_note_proto_rawDesc)))
	})
	return file_proto_note_note_proto_rawDescData
}

var file_proto_note_note_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_note_note_proto_goTypes = []any{
	(*Note)(nil),                   // 0: note.Note
	(*CreateNoteRequest)(nil),      // 1: note.CreateNoteRequest
	(*CreateNoteResponse)(nil),     // 2: note.CreateNoteResponse
	(*GetNoteRequest)(nil),         // 3: note.GetNoteRequest
	(*GetNoteResponse)(nil),        // 4: note.GetNoteResponse
	(*GetNotesByUserRequest)(nil),  // 5: note.GetNotesByUserRequest
	(*GetNotesByUserResponse)(nil), // 6: note.GetNotesByUserResponse
	(*UpdateNoteRequest)(nil),      // 7: note.UpdateNoteRequest
	(*UpdateNoteResponse)(nil),     // 8: note.UpdateNoteResponse
	(*DeleteNoteRequest)(nil),      // 9: note.DeleteNoteRequest
	(*DeleteNoteResponse)(nil),     // 10: note.DeleteNoteResponse
	(*timestamppb.Timestamp)(nil),  // 11: google.protobuf.Timestamp
}
var file_proto_note_note_proto_depIdxs = []int32{
	11, // 0: note.Note.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: note.Note.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: note.CreateNoteResponse.note:type_name -> note.Note
	0,  // 3: note.GetNoteResponse.note:type_name -> note.Note
	0,  // 4: note.GetNotesByUserResponse.note:type_name -> note.Note
	0,  // 5: note.UpdateNoteRequest.note:type_name -> note.Note
	0,  // 6: note.UpdateNoteResponse.note:type_name -> note.Note
	1,  // 7: note.NoteService.CreateNote:input_type -> note.CreateNoteRequest
	3,  // 8: note.NoteService.GetNote:input_type -> note.GetNoteRequest
	5,  // 9: note.NoteService.GetNotesByUser:input_type -> note.GetNotesByUserRequest
	7,  // 10: note.NoteService.UpdateNote:input_type -> note.UpdateNoteRequest
	9,  // 11: note.NoteService.DeleteNote:input_type -> note.DeleteNoteRequest
	2,  // 12: note.NoteService.CreateNote:output_type -> note.CreateNoteResponse
	4,  // 13: note.NoteService.GetNote:output_type -> note.GetNoteResponse
	6,  // 14: note.NoteService.GetNotesByUser:output_type -> note.GetNotesByUserResponse
	8,  // 15: note.NoteService.UpdateNote:output_type -> note.UpdateNoteResponse
	10, // 16: note.NoteService.DeleteNote:output_type -> note.DeleteNoteResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_note_note_proto_init() }
func file_proto_note_note_proto_init() {
	if File_proto_note_note_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_note_note_proto_rawDesc), len(file_proto_note_note_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_note_note_proto_goTypes,
		DependencyIndexes: file_proto_note_note_proto_depIdxs,
		MessageInfos:      file_proto_note_note_proto_msgTypes,
	}.Build()
	File_proto_note_note_proto = out.File
	file_proto_note_note_proto_goTypes = nil
	file_proto_note_note_proto_depIdxs = nil
}
