// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.1
// source: proto/note/note.proto

package note

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	OwnerId       string                 `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_proto_note_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Note) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Note) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Note) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	OwnerId       string                 `protobuf:"bytes,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateNoteRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type GetNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{2}
}

func (x *GetNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type NoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteResponse) Reset() {
	*x = NoteResponse{}
	mi := &file_proto_note_note_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteResponse) ProtoMessage() {}

func (x *NoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteResponse.ProtoReflect.Descriptor instead.
func (*NoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{4}
}

func (x *NoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_proto_note_note_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteResponse) Reset() {
	*x = DeleteNoteResponse{}
	mi := &file_proto_note_note_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteResponse) ProtoMessage() {}

func (x *DeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListNotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesRequest) Reset() {
	*x = ListNotesRequest{}
	mi := &file_proto_note_note_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesRequest) ProtoMessage() {}

func (x *ListNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesRequest.ProtoReflect.Descriptor instead.
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{7}
}

func (x *ListNotesRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ListNotesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ListNotesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*Note                `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesResponse) Reset() {
	*x = ListNotesResponse{}
	mi := &file_proto_note_note_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesResponse) ProtoMessage() {}

func (x *ListNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_note_note_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesResponse.ProtoReflect.Descriptor instead.
func (*ListNotesResponse) Descriptor() ([]byte, []int) {
	return file_proto_note_note_proto_rawDescGZIP(), []int{8}
}

func (x *ListNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

var File_proto_note_note_proto protoreflect.FileDescriptor

const file_proto_note_note_proto_rawDesc = "" +
	"\n" +
	"\x15proto/note/note.proto\x12\x04note\x1a\x1fgoogle/protobuf/timestamp.proto\"\xeb\x01\n" +
	"\x04Note\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x19\n" +
	"\bowner_id\x18\x05 \x01(\tR\aownerId\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"r\n" +
	"\x11CreateNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12\x19\n" +
	"\bowner_id\x18\x04 \x01(\tR\aownerId\" \n" +
	"\x0eGetNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"g\n" +
	"\x11UpdateNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\".\n" +
	"\fNoteResponse\x12\x1e\n" +
	"\x04note\x18\x01 \x01(\v2\n" +
	".note.NoteR\x04note\"#\n" +
	"\x11DeleteNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\".\n" +
	"\x12DeleteNoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"A\n" +
	"\x10ListNotesRequest\x12\x19\n" +
	"\bowner_id\x18\x01 \x01(\tR\aownerId\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\"5\n" +
	"\x11ListNotesResponse\x12 \n" +
	"\x05notes\x18\x01 \x03(\v2\n" +
	".note.NoteR\x05notes2\xba\x02\n" +
	"\vNoteService\x129\n" +
	"\n" +
	"CreateNote\x12\x17.note.CreateNoteRequest\x1a\x12.note.NoteResponse\x126\n" +
	"\aGetNote\x12\x17.note.UpdateNoteRequest\x1a\x12.note.NoteResponse\x129\n" +
	"\n" +
	"UpdateNote\x12\x17.note.UpdateNoteRequest\x1a\x12.note.NoteResponse\x12?\n" +
	"\n" +
	"DeleteNote\x12\x17.note.DeleteNoteRequest\x1a\x18.note.DeleteNoteResponse\x12<\n" +
	"\tListNotes\x12\x16.note.ListNotesRequest\x1a\x17.note.ListNotesResponseB0Z.github.com/kitoyanok66/inote-protos/proto/noteb\x06proto3"

var (
	file_proto_note_note_proto_rawDescOnce sync.Once
	file_proto_note_note_proto_rawDescData []byte
)

func file_proto_note_note_proto_rawDescGZIP() []byte {
	file_proto_note_note_proto_rawDescOnce.Do(func() {
		file_proto_note_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_note_note_proto_rawDesc), len(file_proto_note_note_proto_rawDesc)))
	})
	return file_proto_note_note_proto_rawDescData
}

var file_proto_note_note_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_note_note_proto_goTypes = []any{
	(*Note)(nil),                  // 0: note.Note
	(*CreateNoteRequest)(nil),     // 1: note.CreateNoteRequest
	(*GetNoteRequest)(nil),        // 2: note.GetNoteRequest
	(*UpdateNoteRequest)(nil),     // 3: note.UpdateNoteRequest
	(*NoteResponse)(nil),          // 4: note.NoteResponse
	(*DeleteNoteRequest)(nil),     // 5: note.DeleteNoteRequest
	(*DeleteNoteResponse)(nil),    // 6: note.DeleteNoteResponse
	(*ListNotesRequest)(nil),      // 7: note.ListNotesRequest
	(*ListNotesResponse)(nil),     // 8: note.ListNotesResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_proto_note_note_proto_depIdxs = []int32{
	9, // 0: note.Note.created_at:type_name -> google.protobuf.Timestamp
	9, // 1: note.Note.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: note.NoteResponse.note:type_name -> note.Note
	0, // 3: note.ListNotesResponse.notes:type_name -> note.Note
	1, // 4: note.NoteService.CreateNote:input_type -> note.CreateNoteRequest
	3, // 5: note.NoteService.GetNote:input_type -> note.UpdateNoteRequest
	3, // 6: note.NoteService.UpdateNote:input_type -> note.UpdateNoteRequest
	5, // 7: note.NoteService.DeleteNote:input_type -> note.DeleteNoteRequest
	7, // 8: note.NoteService.ListNotes:input_type -> note.ListNotesRequest
	4, // 9: note.NoteService.CreateNote:output_type -> note.NoteResponse
	4, // 10: note.NoteService.GetNote:output_type -> note.NoteResponse
	4, // 11: note.NoteService.UpdateNote:output_type -> note.NoteResponse
	6, // 12: note.NoteService.DeleteNote:output_type -> note.DeleteNoteResponse
	8, // 13: note.NoteService.ListNotes:output_type -> note.ListNotesResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_note_note_proto_init() }
func file_proto_note_note_proto_init() {
	if File_proto_note_note_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_note_note_proto_rawDesc), len(file_proto_note_note_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_note_note_proto_goTypes,
		DependencyIndexes: file_proto_note_note_proto_depIdxs,
		MessageInfos:      file_proto_note_note_proto_msgTypes,
	}.Build()
	File_proto_note_note_proto = out.File
	file_proto_note_note_proto_goTypes = nil
	file_proto_note_note_proto_depIdxs = nil
}
